{
    "title": "Trying to Understand Backend Web Frameworks for Rust, Go, and C#",
    "author": "th3slay3r",
    "subreddit": "webdev",
    "rank": 14,
    "score": 0,
    "upvote_ratio": 0.5,
    "num_comments (reported by reddit)": 7,
    "url": "https://www.reddit.com/r/webdev/comments/1jee84h/trying_to_understand_backend_web_frameworks_for/",
    "id": "1jee84h",
    "selftext": "I've been doing some research on backend web frameworks to gain a better understanding of the current state of things. There are things I am having trouble understanding like Rust, Go, and C# frameworks in the professional workplace. I was hoping you all could help me put some of the pieces together.\n\nA little background about me. I have been in web development for about four years now. I was trained as as a fullstack web dev and worked primarily with express in the backend. I've been working with express professionally for about three years now. Recently I decided to get a better \"lay of the land\" in the web dev world. Felt like I was in a Javascript bubble.\n\nNow what I found was interesting. My first impression was that I could probably stay in my Javascript bubble if I wanted to. Primarily based on the number of jobs out there and it being one of the most popular frameworks. But I am interested in trying out some new languages. This curiosity came out when type logic would lead to errors in my Javascript code. Going forward I plan to use TypeScript, but none the less I'm interested in options.\n\nStarting out my research I figured out many of the primary languages and frameworks used for backend web development. My curiosity found me looking at a few in particular including Rust, Go, and C#. Other languages like Python, Java, and PHP were notable but I'm trying to narrow down. I'm interested in a low level language like Rust because it will help me understand development on a lower level (less abstractions). On the other hand I am interested in Go because a lot of businesses seem to be transitioning to it. Go seems to be like a nice middle ground between a high level language and a low level language. Lastly C# peaked my interest because of the sheer number of jobs out there for it and the numbers with the 2024 Stack overflow survey.\n\nThis brings me to my curiosities here. In the 2024 Stack Overflow survey in the Web Frameworks and Technologies section (professional tab) it shows \"ASP.net Core\" at 19.1% and \"ASP.net\" at 14.3%. This seemed significantly high to me. In addition, I noticed that frameworks for Go and Rust didn't make the list at all. This to me really isn't lining up from what I am seeing while looking at job openings particularly in \"Backend Engineering\" searches. \n\nSo this brings me to some of my questions. Are there a significant amount of backend web projects out there being written in Go and Rust? In your opinion, in the context of backend web dev, are these two languages going to be used significantly in the future and are they worth learning? ",
    "comments": [
        {
            "author": "Yersyas",
            "body": "I heard many cases using Go as a backend language. For my work, we use Rocket in Rust.",
            "score": 2,
            "replies": [
                {
                    "author": "th3slay3r",
                    "body": "Nice. Thanks for your input!",
                    "score": 1,
                    "replies": []
                }
            ]
        },
        {
            "author": "Least_Chicken_9561",
            "body": "well, docker, kubernetes, and tons of devops tools are written in Go.\n\nfor Rust I have not seen any important project yet\n\nif you want to explore Go then I would recommend you using the framework Go fiber, it's similar to express js and the learning process will be quick (if you want to create a Rest api for example)",
            "score": 2,
            "replies": [
                {
                    "author": "th3slay3r",
                    "body": "Nice ill check out fiber! Ya I also saw that Typescript compiler is being rewritten with Go, so some cool stuff is definitely being created with it.",
                    "score": 1,
                    "replies": []
                }
            ]
        },
        {
            "author": "StretchyCatGames",
            "body": "They are used a lot, but would still be considered niche compared to how huge dotnet is.\n\n\nI think there's no downside learning go because it's a dead simple language with tiny surface area. Coming from JS I think the only thing you might encounter that could be jarring at first is the concurrency model.\n\n\nRust is used in many critical places, the Linux kernel, Windows, Firefox. But rust jobs are extremely rare to spot. Most rust developers were not hired as rust developers, they're experienced developers who started using rust within their tech stack.\n\n\nRust has been used in companies I've worked for including my current one, but none of them have ever hired for rust devs. Rust also has a much steeper learning curve, especially coming from only JS you're not fully across what problems the tricky abstractions are solving for you so it can be hard to reason about.",
            "score": 2,
            "replies": [
                {
                    "author": "th3slay3r",
                    "body": "Appreciate the response. Good to hear Rust is being used but doesn't necessarily reflect in the job search. I'm probably gonna end up learning it because I have extra time. Just wanted some reassurance that it is being used in some workplaces. \n\n  \nThanks for the info on Go as well. That is the impression I got doing research on it. Figured if it ever comes up in the work place I can probably catch on fast.",
                    "score": 2,
                    "replies": []
                }
            ]
        },
        {
            "author": "Rivvin",
            "body": "Im gonna be honest with you... if you want to learn an enterprise language that will land you jobs, C# is probably your #1 pick.  The breadth of .Net systems in closed enterprise loops is just gargantuan.\n\nIf you are interested in Rust and Go as low level technologies for building stuff, they are not going anywhere, but I can promise you C# is going to be more useful for enterprise career work.\n\nI am not knocking on Rust and Go, they are used all over the place including the new MS typescript compiler....  Im just referencing job availability.",
            "score": 2,
            "replies": []
        }
    ]
}