{
    "title": "Builder / design patterns",
    "author": "Ecstatic_String_9873",
    "subreddit": "learnpython",
    "rank": 13,
    "score": 2,
    "upvote_ratio": 0.76,
    "num_comments (reported by reddit)": 2,
    "url": "https://www.reddit.com/r/learnpython/comments/1jeenui/builder_design_patterns/",
    "id": "1jeenui",
    "selftext": "I am trying to organize my code. I am writing an Experiment class which has callbacks. \n\n* Would I need builder if I simply register the callbacks (basically just appending to a list)? I would assume I need it for clarity but at the same time I could add the callback registration logic within this same class, which is more intuitive and doesn't require instantiation of another class\n* I assume I would need a version of the builder pattern in case I want to add some extra methods alongside the callback registration. What would be the best way to do this? Dynamically combine child classes of Experiment which implement this extra logic? Or is it not builder anymore as I'm operating with classes and not instances?\n* How can I add extra fields in the init? At the moment my solution is to assign attributes using a config dictionary, which must contain certain keys. The required keys are extended when I register the callbacks",
    "comments": [
        {
            "author": "Mevrael",
            "body": "What are you trying to do? What is the use case?\n\nIf you need more arguments in the constructor, you just add more arguments like usually in any function.\n\nIf you are looking to organize your files in a project, here is the structure I use:\n\n[https://arkalos.com/docs/structure/](https://arkalos.com/docs/structure/)",
            "score": 1,
            "replies": [
                {
                    "author": "Ecstatic_String_9873",
                    "body": "I want to write a very abstract (classification) Experiment class from which I can inherit and easily create specific experiments. Having builder-like \"builder.add\\_x\\_callback()\" is very fast, easy and clear in seeing differences between different experiment runs.\n\n  \nIt may also be the case that I am over-engineering it as I am the only person using it and also the author:D But it would be nice to have\n\n  \nI saw that having lots of parameters in the constructor is not recommended so I moved from that to a config. It also allows me to dynamically define which attributes the class will have (as different callbacks require different attributes, not sure it is a good practice, though)",
                    "score": 1,
                    "replies": []
                }
            ]
        }
    ]
}