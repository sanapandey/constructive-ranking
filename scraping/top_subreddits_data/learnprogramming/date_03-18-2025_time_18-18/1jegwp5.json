{
    "title": "How to use tagify and ng-disabled in service now widget?",
    "author": "No_Database_2976",
    "subreddit": "learnprogramming",
    "rank": 10,
    "score": 2,
    "upvote_ratio": 1.0,
    "num_comments (reported by reddit)": 0,
    "url": "https://www.reddit.com/r/learnprogramming/comments/1jegwp5/how_to_use_tagify_and_ngdisabled_in_service_now/",
    "id": "1jegwp5",
    "selftext": "Hi so I have two fields called dc domains and lab domains that need to be disabled based on the value of a checkbox called windows active directory. Dc domains and lab domains use tagify with dropdown menu to display its values.\n\nThe issue is dc domains and lab domains seem to stay disabled no matter whether i untick or tick the windows checkbox. What could be the issue? The image i attached is only for reference of how  ui should look.\n\nRequirement:\nThere is a main table from which value of windows checkbox is decided on load. This works now\n\nNow on change, if user clicks and unticks a checked windows checkbow the dc domains and lab domains field must be disabled from further editing i.e user cant add or remove anymore tags.\n\nIf user clicks and ticks an unchecked windows checkbox then lab and dc domains fields must not be disabled and user can edit this field.\n\n\nHtml snippet\n<div class=\"form-group col-md-6\">\n                            <label for=\"directoryServiceType\">Directory Service Type</label>\n                            <div class=\"form-check\">\n                              <input class=\"form-check-input\" type=\"checkbox\" value=\"Windows Active Directory Service\" id=\"windowsADService\" ng-model=\"c.windowsADChecked\" ng-change=\"c.toggleWindowsADService()\">\n                                    Windows Active Directory Service\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" value=\"Unix Active Directory Service\" id=\"unixADService\" >\n                                <label class=\"form-check-label\" for=\"unixADService\">\n                                    Unix Active Directory Service\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n   <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n        <label for=\"dcDomains\">DC Domains</label>\n    <input type=\"text\" id=\"dcDomains\" name=\"dcDomains\" placeholder=\"Select DC Domains\" ng-disabled=\"!c.windowsADChecked\" />\n \n    </div>\n    <div class=\"form-group col-md-6\">\n        <label for=\"labDomains\">Lab Domains</label>\n      <input type=\"text\" id=\"labDomains\" name=\"labDomains\" placeholder=\"Select Lab Domains\" ng-disabled=\"!c.windowsADChecked\" />\n \n    </div>\n</div>\n\n\nScirpt part:\n<script>\n$(document).ready(function() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $('button[name=\"submit\"]').hide();\n \n    // Wrap in an IIFE to avoid polluting global scope\n    (function() {\n        // Declare variables to hold Tagify instances\n        var dcDomainsTagify, labDomainsTagify;\n \n        // Function to initialize Tagify for both inputs\n        function initializeTagify() {\n            var dcDomainsInput = document.querySelector(\"#dcDomains\");\n            var labDomainsInput = document.querySelector(\"#labDomains\");\n \n            dcDomainsTagify = new Tagify(dcDomainsInput, {\n                whitelist: [\n                    \"cls.eng.netapp.com\",\n                    \"eng.netapp.com\",\n                    \"openeng.netapp.com\",\n                    \"ved.eng.netapp.com\"\n                ],\n                enforceWhitelist: true,\n                dropdown: {\n                    maxItems: 10,\n                    enabled: 0, // Always show suggestions\n                    closeOnSelect: false\n                }\n            });\n \n            labDomainsTagify = new Tagify(labDomainsInput, {\n                whitelist: [\n                    \"ctl.gdl.englab.netapp.com\",\n                    \"englab.netapp.com\",\n                    \"gdl.englab.netapp.com\",\n                    \"ict.englab.netapp.com\",\n                    \"mva.gdl.englab.netapp.com\",\n                    \"nb.englab.netapp.com\",\n                    \"nb.openenglab.netapp.com\",\n                    \"openenglab.netapp.com\",\n                    \"quark.gdl.englab.netapp.com\",\n                    \"rtp.openenglab.netapp.com\",\n                    \"svl.englab.netapp.com\"\n                ],\n                enforceWhitelist: true,\n                dropdown: {\n                    maxItems: 10,\n                    enabled: 0, // Always show suggestions\n                    closeOnSelect: false\n                }\n            });\n \n            // Populate with preselected values (from Angular data)\n            var preselectedDc = [\"eng.netapp.com\", \"ved.eng.netapp.com\"]; // Example preselected values\n            var preselectedLab = [\"englab.netapp.com\", \"openenglab.netapp.com\"];\n \n            dcDomainsTagify.addTags(preselectedDc);\n            labDomainsTagify.addTags(preselectedLab);\n        }\n \n        // Expose the Tagify instances and initializer globally for use in the client code\n        window.myWidget = {\n            dcDomainsTagify: function() { return dcDomainsTagify; },\n            labDomainsTagify: function() { return labDomainsTagify; },\n            initializeTagify: initializeTagify\n        };\n \n        // Ensure Tagify initializes only after Angular has rendered its data\n        setTimeout(function() {\n            initializeTagify();\n        }, 1000);\n    })();\n});\n</script>\n\n\n\n\nClient script( we have client script as well as this is a servicenow widget related code)\n\n\n    c.edit_owners_and_domains_dialog = function(account) {\n        $('#editOwners').val(account.primary_owner);\n        $('#editSystemAccountName').text(account.system_account_name);\n        $('#systemAccountName').val(account.system_account_name);\n        $('#accountType').val(account.acctype);\n        $('#owners').val(account.primary_owner);\n        $('#applicationName').val(account.application_name);\n        $('#contactNG').val(account.contactng);\n        $('#purpose').val(account.purpose);\n        $('#additionalDetails').val(account.additional);\n        var dcDomains = account.dc_domains ? account.dc_domains.split(',').map(function(domain) {\n            return domain.trim();\n        }) : [];\n        var labDomains = account.lab_domains ? account.lab_domains.split(',').map(function(domain) {\n            return domain.trim();\n        }) : [];\n        $('#dcDomains').val(dcDomains).trigger('change');\n        $('#labDomains').val(labDomains).trigger('change');\n\n        // --- Modified Section Start ---\n        // Set the Windows AD checkbox state based on account.windows1  \n        if (account.windows1 === \"1\") {\n            $('#windowsADService').prop('checked', true);\n        } else {\n            $('#windowsADService').prop('checked', false);\n        }\n        // Always show the DC and Lab Domains fields  \n        $('#dcDomains').closest('.form-row').show();\n        $('#labDomains').closest('.form-row').show();\n\n        // Toggle Tagify's readonly state using setReadonly() based on windows1 value  \n        if (account.windows1 === \"1\") {\n            var dcInstance = $('#dcDomains').data('tagify');\n            if (dcInstance && typeof dcInstance.setReadonly === \"function\") {\n                dcInstance.setReadonly(false);\n            }\n            var labInstance = $('#labDomains').data('tagify');\n            if (labInstance && typeof labInstance.setReadonly === \"function\") {\n                labInstance.setReadonly(false);\n            }\n        } else {\n            var dcInstance = $('#dcDomains').data('tagify');\n            if (dcInstance && typeof dcInstance.setReadonly === \"function\") {\n                dcInstance.setReadonly(true);\n            }\n            var labInstance = $('#labDomains').data('tagify');\n            if (labInstance && typeof labInstance.setReadonly === \"function\") {\n                labInstance.setReadonly(true);\n            }\n        }\n        // Set Unix AD checkbox state  \n        if (account.unix1 === \"1\") {\n            $('#unixADService').prop('checked', true);\n        } else {\n            $('#unixADService').prop('checked', false);\n        }\n        c.currentAccount = account;\n        $('#editOwnersAndDomainsModal').modal('show');\n\n        // Initialize Tagify for Owners & Contact NG  \n        initializeOwnersAndContactNGTagify();\n\n        // Attach change event handler for the Windows AD checkbox  \n        $('#windowsADService').off('change').on('change', function() {\n            if ($(this).is(':checked')) {\n                var dcInstance = $('#dcDomains').data('tagify');\n                if (dcInstance && typeof dcInstance.setReadonly === \"function\") {\n                    dcInstance.setReadonly(false);\n                }\n                var labInstance = $('#labDomains').data('tagify');\n                if (labInstance && typeof labInstance.setReadonly === \"function\") {\n                    labInstance.setReadonly(false);\n                }\n                if (c.currentAccount) {\n                    c.currentAccount.windows1 = \"1\";\n                }\n            } else {\n                if (confirm(\"Are you sure you want to disable your windows active directory account?\")) {\n                    var dcInstance = $('#dcDomains').data('tagify');\n                    if (dcInstance && typeof dcInstance.setReadonly === \"function\") {\n                        dcInstance.setReadonly(true);\n                    }\n                    var labInstance = $('#labDomains').data('tagify');\n                    if (labInstance && typeof labInstance.setReadonly === \"function\") {\n                        labInstance.setReadonly(true);\n                    }\n                    if (c.currentAccount) {\n                        c.currentAccount.windows1 = \"0\";\n                    }\n                } else {\n                    $(this).prop('checked', true);\n                    var dcInstance = $('#dcDomains').data('tagify');\n                    if (dcInstance && typeof dcInstance.setReadonly === \"function\") {\n                        dcInstance.setReadonly(false);\n                    }\n                    var labInstance = $('#labDomains').data('tagify');\n                    if (labInstance && typeof labInstance.setReadonly === \"function\") {\n                        labInstance.setReadonly(false);\n                    }\n                }\n            }\n        });\n        // --- Modified Section End ---\n    };",
    "comments": []
}