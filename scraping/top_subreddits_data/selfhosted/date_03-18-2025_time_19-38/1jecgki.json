{
    "title": "Completely local Spotify-like music recommendation system built on Python.",
    "author": "Another__one",
    "subreddit": "selfhosted",
    "rank": 8,
    "score": 19,
    "upvote_ratio": 0.76,
    "num_comments (reported by reddit)": 21,
    "url": "https://youtu.be/vux7mDaRCeY",
    "id": "1jecgki",
    "selftext": "",
    "comments": [
        {
            "author": "Another__one",
            "body": "I wanted to share a project I've been working on, that I think many of you here might find interesting: Anagnorisis, a completely local AI-powered recommendation system.The core idea behind Anagnorisis is to provide local and private alternatives to services like YouTube Music or Spotify. Instead of relying on big tech algorithms and cloud-based services that track your listening habits, Anagnorisis puts everything in the user\u2019s control and is completely transparent and open source. The recommendations are not based on generic popularity or corporate promotion, but on your unique preferences that are learned from your feedback.\n\nI hope you will like the idea. Let me know what you think about it - both about the Music Module and the general idea of local, user-controlled recommendation systems.  \n  \nLink to the Github: [https://github.com/volotat/Anagnorisis](https://github.com/volotat/Anagnorisis)",
            "score": 11,
            "replies": []
        },
        {
            "author": "mdeeter",
            "body": "Any chance for a containerized version? Is that possible or reasonable to want?",
            "score": 10,
            "replies": [
                {
                    "author": "Another__one",
                    "body": "I have a plan to build a docker container for the project in my to do list. Watch for updates, I think I will figure it out in the near future. I know that installation is a bit convoluted right now and this needs to be changed.",
                    "score": 9,
                    "replies": [
                        {
                            "author": "rmath3ws",
                            "body": "I'll take it for a test run once docker is done.. thanks, the product looks good",
                            "score": 3,
                            "replies": []
                        },
                        {
                            "author": "UhhYeahMightBeWrong",
                            "body": "would you be open to PRs of a containerized version, or would you prefer to do that yourself?",
                            "score": 2,
                            "replies": [
                                {
                                    "author": "Another__one",
                                    "body": "I would love to see any help with the development. If you know how to set it up properly, that would be a saviour.",
                                    "score": 2,
                                    "replies": [
                                        {
                                            "author": "UhhYeahMightBeWrong",
                                            "body": "Glad to help, especially a project as well intentioned as this one. Looking at your project, I'm considering containerization options:\n\nWould a single container for the entire app work for you, or would you prefer a multi-container setup with Docker Compose (separating Flask backend from database)?\n\n**Single Container**: Simple setup and deployment, but lacks component isolation and scalability.  \n**Multi-Container**: Better isolation and scalability, but adds complexity and overhead.\n\nI'd recommend the multi-container approach with Docker Compose. The benefits of separation will pay off in maintainability and scalability as your application grows, despite the slight initial complexity.",
                                            "score": 1,
                                            "replies": [
                                                {
                                                    "author": "Another__one",
                                                    "body": "The project uses SQLight for the database, so there is no need to build a separate container for it. I even think, that it would be better if the user could store their DB in the arbitrary place. But this option is not yet implemented. \n\nInitially, when I started the project, i made a decision to make it as simple as possible with only a single server running. That why I use Flask and pure js instead of any frameworks. I think it was a good decision that saved me a lot of precious time, as I work on the project infrequently, when I have a free time on my hands. \n\nSo, I think the single container would be enough.",
                                                    "score": 2,
                                                    "replies": [
                                                        {
                                                            "author": "UhhYeahMightBeWrong",
                                                            "body": "That makes sense to me! I like to follow the KISS principle and can see how a single container makes both deployment and development more simple. I will give building an ubuntu 22.04 container a go for this project.",
                                                            "score": 2,
                                                            "replies": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "author": "Itchy_Journalist_175",
            "body": "This type of automatically generated playlists is what is missing from Navidrome and why I currently use Plexamp.\n\nNavidrome already has the infrastructure to play music, scrobble, manage playlists,\u2026 as well as a number of compatible subsonic clients on mobile and other platforms. This would save you have to write a lot of the frontend stuff that are needed to make this a music player.\n\nDo you have any plan to either integrate this with navidrome or can it generate m3u playlists which could then be recognised by navidrome? I could run this on my server to generate playlists in the background but I don\u2019t need it to be a music player.\n\nI think that I read that navidrome is currently undergoing changes to allow plugins to be developed. This could be a good fit.",
            "score": 8,
            "replies": [
                {
                    "author": "Another__one",
                    "body": "I am not familiar with these projects and anyway do not see it working as a plugin. The idea behind the project is a bit more general - basically make a local version of recommendation services (such as youtube, spotify, notion and so on) with a potential p2p connection between users in the future and p2p file search/recommendation. Right now the project is in the \u2018testing the idea\u2019 stage with plans to gradually scale it up in terms of the amount of data it could process.",
                    "score": 3,
                    "replies": []
                }
            ]
        },
        {
            "author": "MaltySines",
            "body": "What does \"spotify-like\" mean here?",
            "score": 2,
            "replies": [
                {
                    "author": "Another__one",
                    "body": "Anagnorisis Music Module aims to automatically select and play music from your local library that you'll enjoy, based on your ratings and listening history. It's about having semantic search and a personalized, AI-driven radio experience for your own music. In contrast to a usual local music players that lacks such types of features. Actually, it only became possible recently because of the rise of machine learning and easy to generate embeddings for audio files.\n\nYou can read more in this blogpost:[ https://medium.com/@AlexeyBorsky/anagnorisis-part-1-a-vision-for-better-information-management-5658b6aaffa0](https://medium.com/@AlexeyBorsky/anagnorisis-part-1-a-vision-for-better-information-management-5658b6aaffa0)",
                    "score": 2,
                    "replies": [
                        {
                            "author": "MaltySines",
                            "body": "OK I get it uses AI to pick what to play, but is that all you mean when you say \"spotify-like\"?\n\nI don't use spotify so I wasn't sure there was something more specific than just recommending music, which every streaming service does",
                            "score": 2,
                            "replies": []
                        }
                    ]
                }
            ]
        },
        {
            "author": "UhhYeahMightBeWrong",
            "body": "I was curious about the name, so I gave it a quick search:\n\n>[Anagnorisis](https://en.wikipedia.org/wiki/Anagnorisis) is a moment in a play or other work when a character makes a critical discovery. Anagnorisis originally meant recognition in its Greek context, not only of a person but also of what that person stood for.\n\nSeems pretty apt!   \n  \nAs someone who used audioscrobbler/[last.fm](http://last.fm) and Grooveshark (RIP Josh Greenberg) I find this sort of application of machine learning to a classic day-to-day problem as \"what the fuck do I listen to next?\" to be exciting.",
            "score": 2,
            "replies": []
        },
        {
            "author": "kernald31",
            "body": "This is a really cool idea. I very much like the idea. However, I feel like there are a couple of things that would make it even more valuable to a lot of people:\n - Exporting playlists. This seems to be the big one - as much as your web player probably works well, most people already have a player they're happy with, that works on their mobile/in their car/..., and you probably don't want to reinvent the wheel here. The main value of your project is not in the web player - leverage what puts you apart!\n - Similarly - importing ratings from other players/software. There are unfortunately a lot of ways this is done (https://github.com/beetbox/beets/issues/2530 has quite a few examples), but a lot of people have already rated their music over the years. Having to do this again would be really daunting.\n\nI also am curious - are the generated playlists based on anything else than ranking? E.g. similarity between songs? I would love something that computes a similarity score between each song, and enforces a maximum difference from song to song, while being based on ratings as the main driving factor. So you still get songs you're likely to like, but the playlist doesn't jump from heavy metal to pop and back again.\n\nOverall it's really cool though. Will definitely keep an eye on it!",
            "score": 2,
            "replies": [
                {
                    "author": "Another__one",
                    "body": "One of the last changes i did to the project was .csv database import and export, so theoretically you can import you ratings from other software, but it will require some tinkering.\n\nRegarding the other ways of building the playlist - I like the idea a lot. Maybe there is some way to generalise it and allow users to build their own rules as they see it fit. I will think about it.\n\nPlaylist export also sound interesting and easy to implement, i will definitely try to make it possible.",
                    "score": 2,
                    "replies": []
                }
            ]
        },
        {
            "author": "Xarishark",
            "body": "You wanted to go for the Ancient Greek version of the word in the name?",
            "score": 1,
            "replies": []
        },
        {
            "author": "StarfishPizza",
            "body": "RemindMe! 1 month",
            "score": 1,
            "replies": [
                {
                    "author": "RemindMeBot",
                    "body": "I will be messaging you in 1 month on [**2025-04-18 23:22:06 UTC**](http://www.wolframalpha.com/input/?i=2025-04-18%2023:22:06%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/selfhosted/comments/1jecgki/completely_local_spotifylike_music_recommendation/miiztn9/?context=3)\n\n[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fselfhosted%2Fcomments%2F1jecgki%2Fcompletely_local_spotifylike_music_recommendation%2Fmiiztn9%2F%5D%0A%0ARemindMe%21%202025-04-18%2023%3A22%3A06%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201jecgki)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
                    "score": 1,
                    "replies": []
                }
            ]
        }
    ]
}